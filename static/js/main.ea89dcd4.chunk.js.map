{"version":3,"sources":["component/Modal/Modal.module.css","component/ImageGalleryItem/ImageGalleryItem.module.css","component/ImageGallery/ImageGallery.module.css","component/Button/Button.module.css","component/Container/Container.module.css","component/Searchbar/Searchbar.js","component/Modal/Modal.js","component/ImageGalleryItem/ImageGalleryItem.js","component/ImageGallery/ImageGallery.js","service/pixabay-api.js","component/Button/Button.js","component/ImageGalleryInfo/ImageGalleryInfo.js","component/Container/Container.js","App.js","index.js","component/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","imageName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","name","placeholder","autoComplete","autoFocus","SearchFormInput","onChange","Component","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleOverlayClick","target","window","addEventListener","removeEventListener","src","alt","createPortal","Overlay","onClick","ImageGalleryItem","showModal","toggleModal","largeImageURL","ImageGalleryItemImage","ImageGallery","images","map","image","webformatURL","tags","id","api","fetchImage","page","fetch","then","response","ok","json","Promise","reject","Error","Button","onClickLoadMore","Status","ImageGalleryInfo","status","currentPage","prevState","prevProps","prevName","nextName","prevPage","nextPage","searchMoreImages","pixabayAPI","total","dark","hits","catch","finally","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","style","margin","textAlign","fontSize","length","color","height","width","timeout","Container","children","container","App","handleSearchForm","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ea89dcd4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1uaHr\",\"Modal\":\"Modal_Modal__1nO1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1um7t\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2Oj_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1X8mv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3GW00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3z9IY\"};","import { Component } from 'react';\n// import { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ imageName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imageName.trim() === '') {\n      toast.error('Please, enter something!');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imageName);\n    this.setState({ imageName: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>\n              {/* <ImSearch style={{ marginRight: 8 }} /> */}\n            </span>\n          </button>\n          <input\n            type=\"text\"\n            name=\"imageName\"\n            placeholder=\"Search images and photos\"\n            autoComplete=\"off\"\n            autoFocus\n            className={s.SearchFormInput}\n            value={this.state.imageName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    onClose: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { src, alt } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleOverlayClick}>\n        <div className={s.Modal}>\n          <img src={src} alt={alt} />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\nimport s from './ImageGalleryItem.module.css';\n\nexport default class ImageGalleryItem extends Component {\n  state = {\n    showModal: false,\n  };\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  render() {\n    const { src, alt, largeImageURL } = this.props;\n    const { showModal } = this.state;\n\n    return (\n      <li className={s.ImageGalleryItem}>\n        <img\n          src={src}\n          alt={alt}\n          className={s.ImageGalleryItemImage}\n          onClick={this.toggleModal}\n        />\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} src={largeImageURL} alt={alt} />\n        )}\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images }) {\n  return (\n    <ul className={s.ImageGallery}>\n      {images &&\n        images.map(image => {\n          return (\n            <ImageGalleryItem\n              src={image.webformatURL}\n              alt={image.tags}\n              largeImageURL={image.largeImageURL}\n              key={image.id}\n            />\n          );\n        })}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","function fetchImage(name, page) {\n  const KEY = '18992166-123806360f211761da038f5eb';\n  const BASE_URL = 'https://pixabay.com/api/';\n\n  return fetch(\n    `${BASE_URL}?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Invalid request'));\n  });\n}\n\nconst api = {\n  fetchImage,\n};\n\nexport default api;\n","import s from './Button.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Button({ onClickLoadMore }) {\n  return (\n    <>\n      <button type=\"button\" className={s.Button} onClick={onClickLoadMore}>\n        Load more\n      </button>\n    </>\n  );\n}\n\nButton.propTypes = {\n  onClickLoadMore: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport ImageGallery from '../ImageGallery';\nimport pixabayAPI from '../../service/pixabay-api';\nimport Button from '../Button';\nimport { toast } from 'react-toastify';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default class ImageGalleryInfo extends Component {\n  state = {\n    images: [],\n    status: Status.IDLE,\n    error: null,\n    currentPage: 1,\n  };\n\n  static propTypes = {\n    imageName: PropTypes.string.isRequired,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevProps.imageName;\n    const nextName = this.props.imageName;\n    const prevPage = prevState.currentPage;\n    const nextPage = this.state.currentPage;\n\n    if (prevName !== nextName) {\n      this.setState({ images: [], currentPage: 1 });\n    }\n\n    if (prevName !== nextName || prevPage !== nextPage) {\n      this.searchMoreImages(nextName, nextPage);\n    }\n  }\n\n  searchMoreImages(nextName, nextPage) {\n    this.setState({ status: Status.PENDING });\n\n    pixabayAPI\n      .fetchImage(nextName, nextPage)\n      .then(images => {\n        if (images.total === 0) {\n          toast.dark('No images. Please try another query!');\n          this.setState({ status: Status.REJECTED });\n\n          return;\n        }\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images.hits],\n          status: Status.RESOLVED,\n        }));\n      })\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => {\n        setTimeout(() => {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: 'smooth',\n          });\n        }, 500);\n      });\n  }\n\n  onClickLoadMore = () => {\n    this.setState(prevState => ({\n      currentPage: prevState.currentPage + 1,\n    }));\n  };\n\n  render() {\n    const { images, status } = this.state;\n\n    return (\n      <>\n        {status === Status.IDLE && (\n          <div\n            style={{\n              margin: '20px auto',\n              textAlign: 'center',\n              fontSize: '20px',\n            }}\n          >\n            Please, enter a query!\n          </div>\n        )}\n        {images.length > 0 && (\n          <>\n            <ImageGallery images={images} />\n            <Button onClickLoadMore={this.onClickLoadMore} />\n          </>\n        )}\n\n        {status === Status.PENDING && (\n          <div>\n            <Loader\n              type=\"Circles\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          </div>\n        )}\n        {status === Status.REJECTED && null}\n      </>\n    );\n  }\n}\n\n//     if (status === Status.IDLE) {\n//       return (\n//         <div\n//           style={{ margin: '20px auto', textAlign: 'center', fontSize: '20px' }}\n//         >\n//           Please, enter a query!\n//         </div>\n//       );\n//     }\n\n//     if (status === Status.PENDING) {\n//       return (\n//         <Loader\n//           type=\"Circles\"\n//           color=\"#00BFFF\"\n//           height={100}\n//           width={100}\n//           timeout={3000} //3 secs\n//         />\n//       );\n//     }\n\n//     if (status === Status.REJECTED) {\n//       return null;\n//     }\n\n//     if (status === Status.RESOLVED) {\n//       return (\n//         <div>\n//           <ImageGallery images={images} />\n//           <Button onClickLoadMore={this.onClickLoadMore} />\n//         </div>\n//       );\n//     }\n//   }\n// }\n","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './component/Searchbar';\nimport ImageGalleryInfo from './component/ImageGalleryInfo';\nimport Container from './component/Container';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    imageName: '',\n  };\n\n  handleSearchForm = imageName => {\n    this.setState({ imageName });\n  };\n\n  render() {\n    const { imageName } = this.state;\n\n    return (\n      <Container>\n        <Searchbar onSubmit={this.handleSearchForm} />\n        <ImageGalleryInfo\n          imageName={imageName}\n          currentPage={this.props.currentPage}\n        />\n\n        <ToastContainer autoClose={3000} />\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1OD7z\",\"SearchForm\":\"Searchbar_SearchForm__3gJqE\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3glLD\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3dAtZ\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3wK01\"};"],"sourceRoot":""}